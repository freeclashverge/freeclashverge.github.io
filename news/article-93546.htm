<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freeclashverge.github.io/news/article-93546.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>站在巨人的肩膀上重新审视C# Span&lt;T&gt;数据结构_在线工具</title>
        <meta name="description" content="先谈一下我对Span的看法， span是指向任意连续内存空间的类型安全、内存安全的视图。 如果你了解【滑动窗口】， 对Span的操作还可以理解为 针对连续内存空间的 滑动窗口。  Span和Memor" />
        <link rel="icon" href="/assets/website/img/freeclashverge/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="FreeClashVerge免费节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freeclashverge.github.io/news/article-93546.htm" />
    <meta property="og:site_name" content="FreeClashVerge免费节点官网" />
    <meta property="og:title" content="站在巨人的肩膀上重新审视C# Span&lt;T&gt;数据结构_在线工具" />
    <meta property="og:image" content="https://freeclashverge.github.io/uploads/20240813-1/05c91e144cb6a9422e39a95c17500447.webp" />
        <meta property="og:release_date" content="2025-04-11T08:58:00" />
    <meta property="og:updated_time" content="2025-04-11T08:58:00" />
        <meta property="og:description" content="先谈一下我对Span的看法， span是指向任意连续内存空间的类型安全、内存安全的视图。 如果你了解【滑动窗口】， 对Span的操作还可以理解为 针对连续内存空间的 滑动窗口。  Span和Memor" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="站在巨人的肩膀上重新审视C# Span&lt;T&gt;数据结构_在线工具">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="/assets/website/css/freeclashverge/bootstrap.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freeclashverge/linericon/style.css">
    <link rel="stylesheet" href="/assets/website/css/freeclashverge/font-awesome.min.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freeclashverge/owl-carousel/owl.carousel.min.css">
    <link rel="stylesheet" href="/assets/website/css/freeclashverge/magnific-popup.css">
    <link rel="stylesheet" href="/assets/website/js/frontend/freeclashverge/nice-select/css/nice-select.css">
    <!-- main css -->
    <link rel="stylesheet" href="/assets/website/css/freeclashverge/style.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-BZVJP9BVQB"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-BZVJP9BVQB');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <!--================ Start Header Area =================-->
    <header class="header_area">
        <div class="main_menu">
            <nav class="navbar navbar-expand-lg navbar-light">
                <div class="container">
                    <!-- Brand and toggle get grouped for better mobile display -->
                    <a class="navbar-brand logo_h" href="/">
                                                <span>Free Clash Verge</span>
                                            </a>
                    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <!-- Collect the nav links, forms, and other content for toggling -->
                    <div class="collapse navbar-collapse offset" id="navbarSupportedContent">
                        <ul class="nav navbar-nav menu_nav justify-content-end">
                                                        <li class="nav-item"><a class="nav-link" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/client.htm">客户端</a></li>
                                                        <li class="nav-item"><a class="nav-link" href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
            </nav>
        </div>
    </header>
    <!--================ End Header Area =================-->
    <!--================ Start Banner Area =================-->
    <section class="banner_area">
        <div class="banner_inner d-flex align-items-center">
            <div class="container">
                <div class="banner_content text-center">
                    <h1>站在巨人的肩膀上重新审视C# Span&lt;T&gt;数据结构_在线工具</h1>
                    <div class="page_link">
                        <a href="/">首页</a>
                        <a href="/news/">新闻资讯</a>
                        <span>正文</span>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!--================ End Banner Area =================-->
    <!--================ Start About Us Area =================-->
    <section class="about_area section_gap">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>先谈一下我对Span的看法， span是指向任意连续内存空间的类型安全、内存安全的视图。</p> <p>如果你了解【滑动窗口】， 对Span的操作还可以理解为 针对连续内存空间的 滑动窗口。</p> <blockquote> <p>Span和Memory都是包装了可以在pipeline上使用的结构化数据的内存缓冲器,他们被设计用于在pipeline中高效传递数据。</p> </blockquote> <h2 id="定语解读">定语解读</h2> <ol> <li> <strong>指向任意连续内存空间</strong>： 支持托管堆，原生内存、堆栈， 这个可从Span<t>的几个重载构造函数窥视一二。</t> </li> <li> <strong>类型安全</strong>： Span<t> 是一个泛型</t> </li> <li> <strong>内存安全</strong>： <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/dotnet/runtime/blob/main/src/libraries/System.Private.CoreLib/src/System/Span.cs"  target="_blank"  rel="nofollow">Span<t></t></a>是一个<code>readonly ref struct</code>数据结构, 用于表征一段连续内存的关键属性被设置成只读readonly， 保证了所有的操作只能在这段内存块内，不存在内存越界的风险。</li> </ol> <pre><code>// 截取自Span源码，表征一段连续内存的关键属性 Pointer &amp; Length 都只能从构造函数赋值  public readonly ref struct Span&lt;T&gt; {     /// &lt;summary&gt;A byref or a native ptr.&lt;/summary&gt;     internal readonly ByReference&lt;T&gt; _reference;     /// &lt;summary&gt;The number of elements this Span contains.&lt;/summary&gt;     private readonly int _length;          [MethodImpl(MethodImplOptions.AggressiveInlining)]     public Span(T[]? array)     {        if (array == null)        {            this = default;            return; // returns default        }        if (!typeof(T).IsValueType &amp;&amp; array.GetType() != typeof(T[]))            ThrowHelper.ThrowArrayTypeMismatchException();       _reference = new ByReference&lt;T&gt;(ref MemoryMarshal.GetArrayDataReference(array));       _length = array.Length;    } } </code></pre> <ol start="4"> <li> <strong>视图</strong>：操作结果会直接体现在底层的连续内存。</li> </ol> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/9ae46d3d918149c698860898aed8ed54.jpg" alt="站在巨人的肩膀上重新审视C# Span&lt;T&gt;数据结构_在线工具"></p> <p>至此我们来看一个简单的用法， 利用span操作指向一段堆栈空间。</p> <pre><code>static  void  Main()         {              Span&lt;byte&gt; arraySpan = stackalloc byte[100];  // 包含指针和Length的只读指针, 类似于go里面的切片              byte data = 0;             for (int ctr = 0; ctr &lt; arraySpan.Length; ctr++)                 arraySpan[ctr] = data++;              arraySpan.Fill(1);              var arraySum = Sum(arraySpan);             Console.WriteLine($"The sum is {arraySum}");   // 输出100              arraySpan.Clear();              var slice  =  arraySpan.Slice(0,50); // 因为是只读属性， 内部New Span&lt;&gt;(), 产生新的切片             arraySum = Sum(slice);             Console.WriteLine($"The sum is {arraySum}");  // 输出0         }          [MethodImpl(MethodImplOptions.AggressiveInlining)]         static int  Sum(Span&lt;byte&gt; array)         {             int arraySum = 0;             foreach (var value in array)                 arraySum += value;              return arraySum;         } </code></pre> <ul> <li>此处Span<byte> 指向了特定的堆栈空间， Fill,Clear 等操作的效果直接体现到该段内存。</byte> </li> <li>注意Slice切片方法，内部实质是产生新的Span，也是一个新的视图，对新span的操作会体现到原始底层数据结构。</li> </ul> <pre><code>  [MethodImpl(MethodImplOptions.AggressiveInlining)]         public Span&lt;T&gt; Slice(int start)         {             if ((uint)start &gt; (uint)_length)                 ThrowHelper.ThrowArgumentOutOfRangeException();              return new Span&lt;T&gt;(ref Unsafe.Add(ref _reference.Value, (nint)(uint)start /* force zero-extension */), _length - start);         } </code></pre> <p>从Slice切片源码，看到利用现有的ptr 和length，产生了新的操作视图，ptr的计算有赖于原ptr移动指针，但是依旧是作用在原始数据块上。</p> <h2 id="衍生技能点">衍生技能点</h2> <p>我们再细看Span的定义， 有几个关键词建议大家温故而知新。</p> <ul> <li> <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/struct#readonly-struct"  target="_blank"  rel="nofollow">readonly  strcut</a> ：从C#7.2开始，你可以将readonly作用在struct上，指示该<strong>struct不可改变</strong>。</li> </ul> <blockquote> <p>span<t> 被定义为readonly struct，内部属性自然也是readonly，从上面的分析和实例看我们可以针对Span表征的特定连续内存空间做内容更新操作；<br /> 如果想限制更新该连续内存空间的内容， C#提供了<code>ReadOnlySpan&lt;T&gt;</code>类型， 该类型强调该块内存只读，也就是不存在Span<t> 拥有的Fill，Clear等方法。</t></t></p> </blockquote> <p>一线码农大佬写了文章讲述[使用span对字符串求和]的姿势，大家都说使用span能高效操作内存，我们对该用例BenchmarkDotnet压测。</p> <pre><code>using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; using System.Buffers; using System.Runtime.CompilerServices; using BenchmarkDotNet.Attributes; using BenchmarkDotNet.Running;  namespace ConsoleApp3 {   public class Program   {       static  void Main()       {           var summary = BenchmarkRunner.Run&lt;MemoryBenchmarkerDemo&gt;();       }   }    [MemoryDiagnoser,RankColumn]   public class MemoryBenchmarkerDemo   {       int NumberOfItems = 100000;        // 对字符串切割， 会产生字符串小对象       [Benchmark]       public void  StringSplit()       {           for (int i = 0; i &lt; NumberOfItems; i++)           {               var s = "97 3";                var arr = s.Split(new string[] { " " }, StringSplitOptions.RemoveEmptyEntries);               var num1 = int.Parse(arr[0]);               var num2 = int.Parse(arr[1]);                _ = num1 + num2;           }                  }              // 对底层字符串切片       [Benchmark]       public void StringSlice()       {           for (int i = 0; i &lt; NumberOfItems; i++)           {               var s = "97 3";               var position = s.IndexOf(' ');               ReadOnlySpan&lt;char&gt; span = s.AsSpan();               var num1 = int.Parse(span.Slice(0, position));               var num2 = int.Parse(span.Slice(position));                _= num1+ num2;            }       }   } } </code></pre> <p><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/9104c68a03fb525442167b2f48783ea8.jpg" alt="站在巨人的肩膀上重新审视C# Span&lt;T&gt;数据结构_在线工具"></p> <p>解读：<br /> 对字符串运行时切分，不会利用驻留池，于是case1会在堆分配大量string小对象，对gc造成压力；<br /> case2对底层字符串切片，虽然会产生不同的透视对象Span， 但是实际还是指向的原始内存块的偏移区间，不存在内存分配。</p> <ul> <li> <a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/struct"  target="_blank"  rel="nofollow">ref  struct</a>:从C#7.2开始，ref可以作用在struct，指示<strong>该类型被分配在堆栈上，并且不能转义到托管堆</strong>。</li> </ul> <blockquote> <p>Span<t>,ReadonlySpan<t> 包装了对于任意连续内存快的透视操作，但是只能被存储堆栈上，不适用于一些场景，例如异步调用，.NET Core 2.1为此新增了<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://docs.microsoft.com/en-us/dotnet/standard/memory-and-spans/memory-t-usage-guidelines"  target="_blank"  rel="nofollow">Memory<t></t></a> , ReadOnlyMemory<t>， 可以被存储在托管堆上, 按下不表。</t></t></t></p> </blockquote> <p>最后用一张图总结<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220507/147a1c4496d6281c62666dba5b43e69a.jpg" alt="站在巨人的肩膀上重新审视C# Span&lt;T&gt;数据结构_在线工具"></p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-93542.htm">使用etcd选举sdk实践master/slave故障转移_在线工具</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-28-free-node-subscribe-links.htm" title="「3月28日」最高速度18M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接">「3月28日」最高速度18M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-25-free-clash-verge-rev-node.htm" title="「3月25日」最高速度18.1M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接">「3月25日」最高速度18.1M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-92082.htm" title="美联众合动物医院 价目表 宠物免费咨询24小时在线医生">美联众合动物医院 价目表 宠物免费咨询24小时在线医生</a></li>
                        <li class="py-2"><a href="/news/article-75078.htm" title="广州宠物领养中心在哪里有 广州宠物领养中心在哪里有啊">广州宠物领养中心在哪里有 广州宠物领养中心在哪里有啊</a></li>
                        <li class="py-2"><a href="/news/article-77797.htm" title="给动物注射疫苗属于人工被动免疫吗（给动物注射疫苗属于人工被动免疫吗为什么）">给动物注射疫苗属于人工被动免疫吗（给动物注射疫苗属于人工被动免疫吗为什么）</a></li>
                        <li class="py-2"><a href="/news/article-68463.htm" title="给动物打预防针是什么部门呢图片（给动物打预防针是什么部门呢图片）">给动物打预防针是什么部门呢图片（给动物打预防针是什么部门呢图片）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-6-clash-verge-rev-github.htm" title="「4月6日」最高速度20.1M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接">「4月6日」最高速度20.1M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-67172.htm" title="领养宠物赚钱软件是哪个 领养宠物赚钱软件是哪个软件">领养宠物赚钱软件是哪个 领养宠物赚钱软件是哪个软件</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-7-node-share-links.htm" title="「4月7日」最高速度18.5M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接">「4月7日」最高速度18.5M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-13-free-node-subscribe.htm" title="「3月13日」最高速度20.7M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接">「3月13日」最高速度20.7M/S，2025年FreeClashVerge每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </section>
    <!--================ End About Us Area =================-->
        <!--================Footer Area =================-->
    <footer class="footer_area">
        <div class="container">
            <div class="row footer_bottom justify-content-center">
                <p class="col-lg-8 col-sm-12 footer-text">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    FreeClashVerge免费节点官网 版权所有 Powered by WordPress
                </p>
            </div>
        </div>
    </footer>
    <!--================End Footer Area =================-->
    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src="/assets/website/js/frontend/freeclashverge/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/popper.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/bootstrap.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/stellar.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/jquery.magnific-popup.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/nice-select/js/jquery.nice-select.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/isotope/imagesloaded.pkgd.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/isotope/isotope-min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/owl-carousel/owl.carousel.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/jquery.ajaxchimp.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/mail-script.js"></script>
    <!--gmaps Js-->
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCjCGmQ0Uq4exrzdcL6rvxywDDOvfAu6eE"></script>
    <script src="/assets/website/js/frontend/freeclashverge/gmaps.min.js"></script>
    <script src="/assets/website/js/frontend/freeclashverge/theme.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>